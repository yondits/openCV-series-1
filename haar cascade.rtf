{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf2 # Image Processing:Syntax - Haar Cascade from XML\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
import numpy as np\
import cv2\
\
# multiple cascades: https://github.com/Itseez/opencv/tree/master/data/haarcascades\
\
# https://github.com/Itseez/opencv/blob/master/data/haarcascades/haarcascade_frontalface_default.xml\
# loading of cascade xml file\
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')\
\
# https://github.com/Itseez/opencv/blob/master/data/haarcascades/haarcascade_eye.xml\
#loading of cascade xml file\
eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')\
\
cap = cv2.VideoCapture(0)\
\
while 1:\
    ret, img = cap.read()\
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\
\
    # detect faces\
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)\
\
    for (x, y, w, h) in faces:\
\
        # x,y starting,  x+w, y+h ending point\
        cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), 2)\
\
        # y:y+h starting, x:x +w ending location of face\
        roi_gray = gray[y:y + h, x:x + w]\
        roi_color = img[y:y + h, x:x + w]\
\
        # detect eyes\
        eyes = eye_cascade.detectMultiScale(roi_gray)\
\
\
        for (ex,ey,ew,eh) in eyes:\
            cv2.rectangle(roi_color, (ex, ey), (ex + ew, ey + eh), (0, 255, 0), 2)\
\
    cv2.imshow('img', img)\
    k = cv2.waitKey(30) & 0xff\
    if k == 27:\
        break\
\
cap.release()\
cv2.destroyAllWindows()\
}